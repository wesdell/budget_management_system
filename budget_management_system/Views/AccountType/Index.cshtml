@model IEnumerable<AccountTypeModel>

@{
	ViewData["Title"] = "Account types";
}

<h1>Account types list</h1>
<h5>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</h5>

<a asp-action="CreateAccountType" class="btn btn-primary mb-3">Add</a>

<table class="table">
	<thead>
		<tr>
			<th>Name</th>
			<th>Actions</th>
		</tr>
	</thead>
	<tbody id="reordenable">
		@foreach(var accountType in Model)
		{
			<tr>
				<td>
					@accountType.Name
				</td>
				<td>
					<input type="hidden" value=@accountType.Id class="account-id" />
					<a class="btn btn-primary" asp-action="UpdateAccountType" asp-route-id=@accountType.Id>Edit</a>
					<a class="btn btn-danger" asp-action="ConfirmDeleteAccountType" asp-route-id=@accountType.Id>Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>

@section Scripts {
	<script>
		const $urlToOrder = '@Url.Action("OrderAccountTypes")';

		$(function() {
			$("#reordenable").sortable({
				stop: async function(e, ui) {
					await updateAccountTypesOrder();
				}
			});

			async function updateAccountTypesOrder() {
				const $accountTypesId = getAccountTypesId();
				await orderAccountTypes($accountTypesId);
			}

			function getAccountTypesId() {
				return $(".account-id").map(function () {
					return $(this).val();
				}).get();
			}

			async function orderAccountTypes(accountTypesId) {
				await fetch($urlToOrder, {
					method: "POST",
					body: JSON.stringify(accountTypesId),
					headers: {
						"Content-Type": "application/json"
					}
				});
			}
		})
	</script>
}